#!/usr/bin/env node

const net = require("net");
const { handle_message, send_message, red, green, open_or_closed } = require("./lib/helpers");
const SOCKET = "./bank.sock";


let connTellers = [];
let connCustomers = [];


// TCP Server using a Unix socket

const server = net.createServer((conn) => {
  console.log("client connected");


  handle_message(conn, (message) => {
    // customer connected?

    if (message === "customer") {
      connCustomers.push(conn);


      // !Tellers connected

      if (!connTellers.length) {
        send_message(conn, `The Bank is ${red("closed")}.`);
      }
    }


    // Tellers connected

    else if (message === "teller") {
      connTellers.push(conn);
      send_message(conn, `# customers:${connCustomers.length}`);


      connCustomers.map((conn, i) => {

				open_or_closed(conn, i);
      });
    }


    // bank response still unchanged
    // send_message(conn, `I, the Bank, received: ${message}`)
  });


  conn.on("close", () => {
    console.log("client disconnected");
  });
});


server.listen(SOCKET);
console.log(`Bank server is listening...`);


process.on("exit", shutdown);
process.on("SIGINT", shutdown);
process.on("SIGTERM", shutdown);


process.on("uncaughtException", function (err) {
  console.log("Uncaught ERROR:", err);
});


function shutdown() {
  server.close();
  process.exit();
}
